var documenterSearchIndex = {"docs":
[{"location":"#FdeSolver.jl","page":"Home","title":"FdeSolver.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Let's solve some differential equations!","category":"page"},{"location":"#Package-features","page":"Home","title":"Package features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Solve fractional calculus problems","category":"page"},{"location":"#Function-Documentation","page":"Home","title":"Function Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"FdeSolver","category":"page"},{"location":"#FdeSolver","page":"Home","title":"FdeSolver","text":"FDEsolver(F, tSpan, y0, β, par...; h = 0.01, nc = 3, StopIt = \"Standard\", tol = 10^(-9), itmax = 10)\n\nSolves fractional differential equations with a predictor-corrector approach.\n\nArguments\n\nF: the right side of the system of differential equations. It must be expressed  in the form of a function and return a vector function with the same number of  entries of order of derivatives. This function can also include a vector of  parameters: par... .\ntSpan::Vector{Number}: the time span along which computation is performed.\ny0: the initial values in the form of a row vector (Vector{Number}) for β <= 1  and a matrix (Matrix{Number}) for β > 1, where each column corresponds to the  initial values of one differential equation and each row to the order of derivation.\nβ::Vector{Number}: the orders of derivation in the form of a row vector, where  each element corresponds to the order of one differential equation. It can take  decimal as well as integer values.\npar...: additional parameters for the function F.\nh::Real: the step size for correction.\nnc:Int64: the desired number of corrections.\nStopIt::String: the method to stop correction. It can take either \"Standard\"  (by default) or \"Convergence\". In the former case, the function will repeat  correction as many times as specified in nc; in the latter case, correction will  stop only when tolerance (tol) or the iteration max (itmax) is reached.\ntol::Float64: the tolerance.\nìtmax::Int64: the maximal number of iterations.\n\n\n\n\n\n","category":"module"}]
}
